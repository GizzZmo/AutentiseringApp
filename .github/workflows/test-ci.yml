name: CI/CD Testing for AutentiseringApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-authentication:
    runs-on: macos-latest
    strategy:
      matrix:
        swift: ["5.7", "5.8"]
    steps:
      - name: 🚀 Sjekk ut repository
        uses: actions/checkout@v3

      - name: 🛠 Sett opp Swift-miljø
        run: |
          sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
          swift --version

      - name: 📦 Cache Swift Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.swiftpm
          key: ${{ runner.os }}-swiftpm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-swiftpm-

      - name: 📦 Installer avhengigheter
        run: swift package update

      - name: 📏 Lint Swift Code
        run: swiftlint

      - name: ✅ Kjør enhetstester for autentisering
        run: swift test --filter AuthenticationManagerTests

      - name: 📤 Send Slack-varsler ved suksess
        if: success()
        run: |
          sh Scripts/slack_notify.sh success "Authentication tests passed on ${{ github.ref }} at ${{ github.sha }}"

      - name: 📤 Send Slack-varsler ved feil
        if: failure()
        run: |
          sh Scripts/slack_notify.sh failure "Authentication tests failed on ${{ github.ref }} at ${{ github.sha }}"

  test-cloudkit:
    runs-on: macos-latest
    strategy:
      matrix:
        swift: ["5.7", "5.8"]
    steps:
      - name: 🚀 Sjekk ut repository
        uses: actions/checkout@v3

      - name: 🛠 Sett opp Swift-miljø
        run: |
          sudo xcode-select -switch /Applications/Xcode.app/Contents/Developer
          swift --version

      - name: 📦 Cache Swift Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.swiftpm
          key: ${{ runner.os }}-swiftpm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-swiftpm-

      - name: 📦 Installer avhengigheter
        run: swift package update

      - name: 📏 Lint Swift Code
        run: swiftlint

      - name: ✅ Test CloudKit-synkronisering
        run: swift test --filter CloudKitTests

      - name: 📤 Send Slack-varsler ved suksess
        if: success()
        run: |
          sh Scripts/slack_notify.sh success "CloudKit tests passed on ${{ github.ref }} at ${{ github.sha }}"

      - name: 📤 Send Slack-varsler ved feil
        if: failure()
        run: |
          sh Scripts/slack_notify.sh failure "CloudKit tests failed on ${{ github.ref }} at ${{ github.sha }}"

  docker-build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Sjekk ut repository
        uses: actions/checkout@v3

      - name: ✅ Bygg Docker-container
        run: docker build -t autentisering-app .

      - name: ✅ Kjør tester i Docker-container
        run: |
          docker run --rm autentisering-app swift test

      - name: 📤 Send Slack-varsler ved suksess
        if: success()
        run: |
          sh Scripts/slack_notify.sh success "Docker build and tests passed on ${{ github.ref }} at ${{ github.sha }}"

      - name: 📤 Send Slack-varsler ved feil
        if: failure()
        run: |
          sh Scripts/slack_notify.sh failure "Docker build or tests failed on ${{ github.ref }} at ${{ github.sha }}"

# Documentation and comments for clarity
# - Each job runs independently and in parallel for efficiency.
# - Swift dependency caching is enabled for faster builds.
# - Slack notifications are sent on both success and failure, with branch and commit info.
# - Linting step enforces code style.
# - Docker job builds and tests the container.
# - Matrix testing covers multiple Swift versions.

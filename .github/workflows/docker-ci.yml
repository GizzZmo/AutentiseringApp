name: CI/CD med Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      # Sjekker ut koden fra repoet
      - name: üöÄ Sjekk ut koden
        uses: actions/checkout@v3

      # Linter Dockerfile for best practices
      - name: üïµÔ∏è Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      # Setter opp Docker Buildx for caching og avansert bygging
      - name: üê≥ Sett opp Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Logger inn p√• Docker Hub hvis credentials finnes (valgfritt)
      - name: üîë Logg inn p√• Docker Hub (valgfritt)
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Bygger Docker-container med cache og tagger med commit SHA
      - name: üîç Bygg Docker-container med cache
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            autentisering-app:latest
            autentisering-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Kj√∏r tester i Docker-containeren
      - name: ‚úÖ Kj√∏r applikasjonstester
        run: docker run --rm autentisering-app:${{ github.sha }} swift test

      # Push Docker image til Docker Hub hvis credentials finnes (valgfritt)
      - name: üì§ Push til Docker Hub (valgfritt)
        if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/autentisering-app:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/autentisering-app:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # (Valgfritt) Send Slack-varsling ved feil
      # - name: Slack Notification ved feil
      #   if: failure()
      #   uses: rtCamp/action-slack-notify@v2
      #   env:
      #     SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
